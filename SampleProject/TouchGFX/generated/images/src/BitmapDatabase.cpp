// 4.16.0 0x1be27400
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_attivo[]; // BITMAP_ATTIVO_ID = 0, Size: 140x50 pixels
extern const unsigned char image_ico[]; // BITMAP_ICO_ID = 1, Size: 93x71 pixels
extern const unsigned char image_samplesplash[]; // BITMAP_SAMPLESPLASH_ID = 2, Size: 800x480 pixels
extern const unsigned char image_stato[]; // BITMAP_STATO_ID = 3, Size: 140x50 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_attivo, 0, 140, 50, 6, 3, 129, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 47, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_ico, 0, 93, 71, 7, 18, 79, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_samplesplash, 0, 800, 480, 0, 0, 800, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 480, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_stato, 0, 140, 50, 6, 3, 129, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 47, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
